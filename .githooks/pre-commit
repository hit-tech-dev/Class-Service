#!/usr/bin/env bash

# set this to your active branch
current_branch="$(git rev-parse --abbrev-ref HEAD)"

# echo "On branch '$current_branch'"

if [[ $current_branch != feature/* ]] && [[ $current_branch != fix/* ]] && [[ $current_branch != config/* ]] && [[ $current_branch != hotfix/* ]] && [[ $current_branch != dev/* ]] && [[ $current_branch != test/* ]] && [[ $current_branch != release/* ]];
then
	echo "ERROR! Your branch name is illegal. Branch name must start with one of the following options: 'feature | fix | config | hotfix | dev | test | release'" >&2
	exit 1
fi

if [[ $current_branch == feature/* ]]; then
	REGEX_FEATURE="^(feature\/([a-z0-9]|_)+)$"
	FEATURE_ID_IN_BRANCH=$(echo $(git rev-parse --abbrev-ref HEAD) | grep -o -E "$REGEX_FEATURE")
	ERR_MSG_FEATURE="ERROR! The branch name must follow the rule: 'feature/<description lower case and use '_' as separator>'"
	if [[ -z "$FEATURE_ID_IN_BRANCH" ]]; then
		echo "feature check error"
		echo "$ERR_MSG_FEATURE" >&2
		exit 1
	fi
fi

if [[ $current_branch == fix/* ]]; then
	REGEX_FIX="^(fix\/([a-z0-9]|_)+)$"
	FIX_ID_IN_BRANCH=$(echo $(git rev-parse --abbrev-ref HEAD) | grep -o -E "$REGEX_FIX")
	ERR_MSG_FIX="ERROR! The branch name must follow the rule: 'fix/<description lower case and use '_' as separator>'"
	if [[ -z "$FIX_ID_IN_BRANCH" ]]; then
		echo "fix check error"
		echo "$ERR_MSG_FIX" >&2
		exit 1
	fi
fi

if [[ $current_branch == config/* ]]; then
	REGEX_CONFIG="^(config\/([a-z0-9]|_)+)$"
	CONFIG_ID_IN_BRANCH=$(echo $(git rev-parse --abbrev-ref HEAD) | grep -o -E "$REGEX_CONFIG")
	ERR_MSG_CONFIG="ERROR! The branch name must follow the rule: 'config/<description lower case and use '_' as separator>'"
	if [[ -z "$CONFIG_ID_IN_BRANCH" ]]; then
		echo "config check error"
		echo "$ERR_MSG_CONFIG" >&2
		exit 1
	fi
fi

if [[ $current_branch == hotfix/* ]]; then
	REGEX_HOTFIX="^(hotfix\/([a-z0-9]|_|\/)+)$"
	HOTFIX_ID_IN_BRANCH=$(echo $(git rev-parse --abbrev-ref HEAD) | grep -o -E "$REGEX_HOTFIX")
	ERR_MSG_HOTFIX="ERROR! The branch name must follow the rule: 'hotfix/<branch-name>/<description lower case and use '_' as separator>'"
	if [[ -z "$HOTFIX_ID_IN_BRANCH" ]]; then
		echo "hotfix check error"
		echo "$ERR_MSG_HOTFIX" >&2
		exit 1
	fi
fi

if [[ $current_branch == dev/* ]]; then
	REGEX_DEV="^(dev\/([a-z0-9]|_)+)$"
	DEV_ID_IN_BRANCH=$(echo $(git rev-parse --abbrev-ref HEAD) | grep -o -E "$REGEX_DEV")
	ERR_MSG_DEV="ERROR! The branch name must follow the rule: 'dev/<description lower case and use '_' as separator>'"
	if [[ -z "$DEV_ID_IN_BRANCH" ]]; then
		echo "dev check error"
		echo "$ERR_MSG_DEV" >&2
		exit 1
	fi
fi

if [[ $current_branch == test/* ]]; then
	REGEX_TEST="^(test\/([a-z0-9]|_)+)$"
	TEST_ID_IN_BRANCH=$(echo $(git rev-parse --abbrev-ref HEAD) | grep -o -E "$REGEX_TEST")
	ERR_MSG_TEST="ERROR! The branch name must follow the rule: 'test/<description lower case and use '_' as separator>'"
	if [[ -z "$TEST_ID_IN_BRANCH" ]]; then
		echo "test check error"
		echo "$ERR_MSG_TEST" >&2
		exit 1
	fi
fi

if [[ $current_branch == release/* ]]; then
	REGEX_RELEASE="^(release\/([a-z0-9]|_)+)$"
	RELEASE_ID_IN_BRANCH=$(echo $(git rev-parse --abbrev-ref HEAD) | grep -o -E "$REGEX_RELEASE")
	ERR_MSG_RELEASE="ERROR! The branch name must follow the rule: 'release/<description lower case and use '_' as separator>'"
	if [[ -z "$RELEASE_ID_IN_BRANCH" ]]; then
		echo "release check error"
		echo "$ERR_MSG_RELEASE" >&2
		exit 1
	fi
fi
